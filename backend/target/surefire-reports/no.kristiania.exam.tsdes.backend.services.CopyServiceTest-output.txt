16:21:54.333 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
16:21:54.384 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
16:21:54.435 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [no.kristiania.exam.tsdes.backend.services.CopyServiceTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
16:21:54.459 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [no.kristiania.exam.tsdes.backend.services.CopyServiceTest], using SpringBootContextLoader
16:21:54.468 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [no.kristiania.exam.tsdes.backend.services.CopyServiceTest]: class path resource [no/kristiania/exam/tsdes/backend/services/CopyServiceTest-context.xml] does not exist
16:21:54.469 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [no.kristiania.exam.tsdes.backend.services.CopyServiceTest]: class path resource [no/kristiania/exam/tsdes/backend/services/CopyServiceTestContext.groovy] does not exist
16:21:54.469 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [no.kristiania.exam.tsdes.backend.services.CopyServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
16:21:54.558 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [no.kristiania.exam.tsdes.backend.services.CopyServiceTest]
16:21:54.814 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [no.kristiania.exam.tsdes.backend.services.CopyServiceTest]: using defaults.
16:21:54.816 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
16:21:54.842 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
16:21:54.860 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1a345298, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4ad896f7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@c318864, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7d61468c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@45796b2a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4b98225c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4beae1e3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3c488b34, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32e697ac, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3866c96e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@241fc278]
16:21:54.867 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@46702c26 testClass = CopyServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7956f93a testClass = CopyServiceTest, locations = '{}', classes = '{class no.kristiania.exam.tsdes.backend.TestApplication, class no.kristiania.exam.tsdes.backend.TestApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@151ab2b9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2b53840a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3292d91a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2e7af36e], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
16:21:54.879 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@46702c26 testClass = CopyServiceTest, testInstance = no.kristiania.exam.tsdes.backend.services.CopyServiceTest@194911c1, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7956f93a testClass = CopyServiceTest, locations = '{}', classes = '{class no.kristiania.exam.tsdes.backend.TestApplication, class no.kristiania.exam.tsdes.backend.TestApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@151ab2b9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2b53840a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3292d91a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2e7af36e], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]].
16:21:54.933 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.0.RELEASE)

2020-05-06 16:21:55.546  INFO 12048 --- [           main] n.k.e.t.b.services.CopyServiceTest       : Starting CopyServiceTest on armin-HP-ENVY-x360-Convertible-13-ar0xxx with PID 12048 (started by armin in /mnt/DEA264B4A26492B7/Users/armin/Documents/Vaar_2019/exam-tsdes/backend)
2020-05-06 16:21:55.549  INFO 12048 --- [           main] n.k.e.t.b.services.CopyServiceTest       : No active profile set, falling back to default profiles: default
2020-05-06 16:21:56.483  INFO 12048 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2020-05-06 16:21:56.524  INFO 12048 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29ms. Found 0 repository interfaces.
2020-05-06 16:21:57.501  INFO 12048 --- [           main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 5.2.1 by Boxfuse
2020-05-06 16:21:57.542  INFO 12048 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-06 16:21:58.090  INFO 12048 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-06 16:21:58.104  INFO 12048 --- [           main] o.f.c.internal.database.DatabaseFactory  : Database: jdbc:h2:mem:testdb (H2 1.4)
2020-05-06 16:21:58.183  WARN 12048 --- [           main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: H2 1.4.200 is newer than this version of Flyway and support has not been tested.
2020-05-06 16:21:58.307  INFO 12048 --- [           main] o.f.core.internal.command.DbValidate     : Successfully validated 1 migration (execution time 00:00.034s)
2020-05-06 16:21:58.328  INFO 12048 --- [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Creating Schema History table: "PUBLIC"."flyway_schema_history"
2020-05-06 16:21:58.379  INFO 12048 --- [           main] o.f.core.internal.command.DbMigrate      : Current version of schema "PUBLIC": << Empty Schema >>
2020-05-06 16:21:58.381  INFO 12048 --- [           main] o.f.core.internal.command.DbMigrate      : Migrating schema "PUBLIC" to version 1.0 - createDB
2020-05-06 16:21:58.457  INFO 12048 --- [           main] o.f.core.internal.command.DbMigrate      : Successfully applied 1 migration to schema "PUBLIC" (execution time 00:00.134s)
2020-05-06 16:21:58.717  INFO 12048 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-06 16:21:58.916  INFO 12048 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.7.Final}
2020-05-06 16:21:58.919  INFO 12048 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-05-06 16:21:59.227  INFO 12048 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-05-06 16:21:59.567  INFO 12048 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-05-06 16:22:00.077  WARN 12048 --- [           main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): no.kristiania.exam.tsdes.backend.entities.CopyId
2020-05-06 16:22:00.078  WARN 12048 --- [           main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): no.kristiania.exam.tsdes.backend.entities.CopyId
2020-05-06 16:22:01.115  INFO 12048 --- [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-05-06 16:22:01.368  INFO 12048 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-06 16:22:02.266  INFO 12048 --- [           main] n.k.e.t.b.services.CopyServiceTest       : Started CopyServiceTest in 7.329 seconds (JVM running for 9.512)
Hibernate: DELETE FROM user_roles
Hibernate: delete from copy
Hibernate: delete from users_owned_items where (owned_by_username) in (select username from users)
Hibernate: delete from users
Hibernate: delete from users_owned_items where (owned_items_id) in (select id from item)
Hibernate: delete from item
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into users (balance, email, enabled, hashed_password, last_name, name, number_of_loot_boxes, username) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into user_roles (user_username, roles) values (?, ?)
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: select owneditems0_.owned_by_username as owned_by1_4_0_, owneditems0_.owned_items_id as owned_it2_4_0_, item1_.id as id1_1_1_, item1_.attack as attack2_1_1_, item1_.defense as defense3_1_1_, item1_.description as descript4_1_1_, item1_.is_golden as is_golde5_1_1_, item1_.rarity as rarity6_1_1_, item1_.title as title7_1_1_ from users_owned_items owneditems0_ inner join item item1_ on owneditems0_.owned_items_id=item1_.id where owneditems0_.owned_by_username=?
Hibernate: select ownedcopie0_.user_username as user_use2_0_0_, ownedcopie0_.item_id as item_id3_0_0_, ownedcopie0_.item_id as item_id3_0_1_, ownedcopie0_.user_username as user_use2_0_1_, ownedcopie0_.number_of_copies as number_o1_0_1_, item1_.id as id1_1_2_, item1_.attack as attack2_1_2_, item1_.defense as defense3_1_2_, item1_.description as descript4_1_2_, item1_.is_golden as is_golde5_1_2_, item1_.rarity as rarity6_1_2_, item1_.title as title7_1_2_ from copy ownedcopie0_ inner join item item1_ on ownedcopie0_.item_id=item1_.id where ownedcopie0_.user_username=?
Hibernate: call next value for hibernate_sequence
Hibernate: insert into item (attack, defense, description, is_golden, rarity, title, id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select item0_.id as id1_1_0_, item0_.attack as attack2_1_0_, item0_.defense as defense3_1_0_, item0_.description as descript4_1_0_, item0_.is_golden as is_golde5_1_0_, item0_.rarity as rarity6_1_0_, item0_.title as title7_1_0_ from item item0_ where item0_.id=?
Hibernate: select copy0_.item_id as item_id3_0_, copy0_.user_username as user_use2_0_, copy0_.number_of_copies as number_o1_0_ from copy copy0_ where copy0_.user_username=? and copy0_.item_id=?
Hibernate: DELETE FROM user_roles
Hibernate: delete from copy
Hibernate: delete from users_owned_items where (owned_by_username) in (select username from users)
Hibernate: delete from users
Hibernate: delete from users_owned_items where (owned_items_id) in (select id from item)
Hibernate: delete from item
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: insert into users (balance, email, enabled, hashed_password, last_name, name, number_of_loot_boxes, username) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into user_roles (user_username, roles) values (?, ?)
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: select owneditems0_.owned_by_username as owned_by1_4_0_, owneditems0_.owned_items_id as owned_it2_4_0_, item1_.id as id1_1_1_, item1_.attack as attack2_1_1_, item1_.defense as defense3_1_1_, item1_.description as descript4_1_1_, item1_.is_golden as is_golde5_1_1_, item1_.rarity as rarity6_1_1_, item1_.title as title7_1_1_ from users_owned_items owneditems0_ inner join item item1_ on owneditems0_.owned_items_id=item1_.id where owneditems0_.owned_by_username=?
Hibernate: select ownedcopie0_.user_username as user_use2_0_0_, ownedcopie0_.item_id as item_id3_0_0_, ownedcopie0_.item_id as item_id3_0_1_, ownedcopie0_.user_username as user_use2_0_1_, ownedcopie0_.number_of_copies as number_o1_0_1_, item1_.id as id1_1_2_, item1_.attack as attack2_1_2_, item1_.defense as defense3_1_2_, item1_.description as descript4_1_2_, item1_.is_golden as is_golde5_1_2_, item1_.rarity as rarity6_1_2_, item1_.title as title7_1_2_ from copy ownedcopie0_ inner join item item1_ on ownedcopie0_.item_id=item1_.id where ownedcopie0_.user_username=?
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: update users set balance=?, email=?, enabled=?, hashed_password=?, last_name=?, name=?, number_of_loot_boxes=? where username=?
Hibernate: call next value for hibernate_sequence
Hibernate: insert into item (attack, defense, description, is_golden, rarity, title, id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select item0_.id as id1_1_0_, item0_.attack as attack2_1_0_, item0_.defense as defense3_1_0_, item0_.description as descript4_1_0_, item0_.is_golden as is_golde5_1_0_, item0_.rarity as rarity6_1_0_, item0_.title as title7_1_0_ from item item0_ where item0_.id=?
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: select owneditems0_.owned_by_username as owned_by1_4_0_, owneditems0_.owned_items_id as owned_it2_4_0_, item1_.id as id1_1_1_, item1_.attack as attack2_1_1_, item1_.defense as defense3_1_1_, item1_.description as descript4_1_1_, item1_.is_golden as is_golde5_1_1_, item1_.rarity as rarity6_1_1_, item1_.title as title7_1_1_ from users_owned_items owneditems0_ inner join item item1_ on owneditems0_.owned_items_id=item1_.id where owneditems0_.owned_by_username=?
Hibernate: select copy0_.item_id as item_id3_0_, copy0_.user_username as user_use2_0_, copy0_.number_of_copies as number_o1_0_ from copy copy0_ where copy0_.user_username=? and copy0_.item_id=?
Hibernate: insert into copy (number_of_copies, item_id, user_username) values (?, ?, ?)
Hibernate: update users set balance=?, email=?, enabled=?, hashed_password=?, last_name=?, name=?, number_of_loot_boxes=? where username=?
Hibernate: insert into users_owned_items (owned_by_username, owned_items_id) values (?, ?)
Hibernate: select copy0_.item_id as item_id3_0_, copy0_.user_username as user_use2_0_, copy0_.number_of_copies as number_o1_0_ from copy copy0_ where copy0_.user_username=? and copy0_.item_id=?
Hibernate: select item0_.id as id1_1_0_, item0_.attack as attack2_1_0_, item0_.defense as defense3_1_0_, item0_.description as descript4_1_0_, item0_.is_golden as is_golde5_1_0_, item0_.rarity as rarity6_1_0_, item0_.title as title7_1_0_ from item item0_ where item0_.id=?
Hibernate: update copy set number_of_copies=? where item_id=? and user_username=?
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: select owneditems0_.owned_by_username as owned_by1_4_0_, owneditems0_.owned_items_id as owned_it2_4_0_, item1_.id as id1_1_1_, item1_.attack as attack2_1_1_, item1_.defense as defense3_1_1_, item1_.description as descript4_1_1_, item1_.is_golden as is_golde5_1_1_, item1_.rarity as rarity6_1_1_, item1_.title as title7_1_1_ from users_owned_items owneditems0_ inner join item item1_ on owneditems0_.owned_items_id=item1_.id where owneditems0_.owned_by_username=?
Hibernate: select ownedcopie0_.user_username as user_use2_0_0_, ownedcopie0_.item_id as item_id3_0_0_, ownedcopie0_.item_id as item_id3_0_1_, ownedcopie0_.user_username as user_use2_0_1_, ownedcopie0_.number_of_copies as number_o1_0_1_, item1_.id as id1_1_2_, item1_.attack as attack2_1_2_, item1_.defense as defense3_1_2_, item1_.description as descript4_1_2_, item1_.is_golden as is_golde5_1_2_, item1_.rarity as rarity6_1_2_, item1_.title as title7_1_2_ from copy ownedcopie0_ inner join item item1_ on ownedcopie0_.item_id=item1_.id where ownedcopie0_.user_username=?
Hibernate: select copy0_.item_id as item_id3_0_, copy0_.user_username as user_use2_0_, copy0_.number_of_copies as number_o1_0_ from copy copy0_ where copy0_.user_username=? and copy0_.item_id=?
Hibernate: select item0_.id as id1_1_0_, item0_.attack as attack2_1_0_, item0_.defense as defense3_1_0_, item0_.description as descript4_1_0_, item0_.is_golden as is_golde5_1_0_, item0_.rarity as rarity6_1_0_, item0_.title as title7_1_0_ from item item0_ where item0_.id=?
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: update users set balance=?, email=?, enabled=?, hashed_password=?, last_name=?, name=?, number_of_loot_boxes=? where username=?
Hibernate: update copy set number_of_copies=? where item_id=? and user_username=?
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: select owneditems0_.owned_by_username as owned_by1_4_0_, owneditems0_.owned_items_id as owned_it2_4_0_, item1_.id as id1_1_1_, item1_.attack as attack2_1_1_, item1_.defense as defense3_1_1_, item1_.description as descript4_1_1_, item1_.is_golden as is_golde5_1_1_, item1_.rarity as rarity6_1_1_, item1_.title as title7_1_1_ from users_owned_items owneditems0_ inner join item item1_ on owneditems0_.owned_items_id=item1_.id where owneditems0_.owned_by_username=?
Hibernate: select ownedcopie0_.user_username as user_use2_0_0_, ownedcopie0_.item_id as item_id3_0_0_, ownedcopie0_.item_id as item_id3_0_1_, ownedcopie0_.user_username as user_use2_0_1_, ownedcopie0_.number_of_copies as number_o1_0_1_, item1_.id as id1_1_2_, item1_.attack as attack2_1_2_, item1_.defense as defense3_1_2_, item1_.description as descript4_1_2_, item1_.is_golden as is_golde5_1_2_, item1_.rarity as rarity6_1_2_, item1_.title as title7_1_2_ from copy ownedcopie0_ inner join item item1_ on ownedcopie0_.item_id=item1_.id where ownedcopie0_.user_username=?
Hibernate: select copy0_.item_id as item_id3_0_, copy0_.user_username as user_use2_0_, copy0_.number_of_copies as number_o1_0_ from copy copy0_ where copy0_.user_username=? and copy0_.item_id=?
Hibernate: select item0_.id as id1_1_0_, item0_.attack as attack2_1_0_, item0_.defense as defense3_1_0_, item0_.description as descript4_1_0_, item0_.is_golden as is_golde5_1_0_, item0_.rarity as rarity6_1_0_, item0_.title as title7_1_0_ from item item0_ where item0_.id=?
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: update users set balance=?, email=?, enabled=?, hashed_password=?, last_name=?, name=?, number_of_loot_boxes=? where username=?
Hibernate: update copy set number_of_copies=? where item_id=? and user_username=?
Hibernate: select user0_.username as username1_3_0_, user0_.balance as balance2_3_0_, user0_.email as email3_3_0_, user0_.enabled as enabled4_3_0_, user0_.hashed_password as hashed_p5_3_0_, user0_.last_name as last_nam6_3_0_, user0_.name as name7_3_0_, user0_.number_of_loot_boxes as number_o8_3_0_, roles1_.user_username as user_use1_2_1_, roles1_.roles as roles2_2_1_ from users user0_ left outer join user_roles roles1_ on user0_.username=roles1_.user_username where user0_.username=?
Hibernate: select owneditems0_.owned_by_username as owned_by1_4_0_, owneditems0_.owned_items_id as owned_it2_4_0_, item1_.id as id1_1_1_, item1_.attack as attack2_1_1_, item1_.defense as defense3_1_1_, item1_.description as descript4_1_1_, item1_.is_golden as is_golde5_1_1_, item1_.rarity as rarity6_1_1_, item1_.title as title7_1_1_ from users_owned_items owneditems0_ inner join item item1_ on owneditems0_.owned_items_id=item1_.id where owneditems0_.owned_by_username=?
Hibernate: select ownedcopie0_.user_username as user_use2_0_0_, ownedcopie0_.item_id as item_id3_0_0_, ownedcopie0_.item_id as item_id3_0_1_, ownedcopie0_.user_username as user_use2_0_1_, ownedcopie0_.number_of_copies as number_o1_0_1_, item1_.id as id1_1_2_, item1_.attack as attack2_1_2_, item1_.defense as defense3_1_2_, item1_.description as descript4_1_2_, item1_.is_golden as is_golde5_1_2_, item1_.rarity as rarity6_1_2_, item1_.title as title7_1_2_ from copy ownedcopie0_ inner join item item1_ on ownedcopie0_.item_id=item1_.id where ownedcopie0_.user_username=?
